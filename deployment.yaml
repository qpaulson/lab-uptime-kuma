apiVersion: v1
kind: PersistentVolume
metadata:
  name: uptime-kuma-pv
  namespace: uptime-kuma
spec:
  capacity:
    storage: 20Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /k8s-data/uptime-kuma
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - k0s-w1

---

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
  namespace: uptime-kuma
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer


---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: uptime-kuma-pvc
  namespace: uptime-kuma
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 2Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: uptime-kuma
  namespace: uptime-kuma
  labels:
    app: uptime-kuma
spec:
  replicas: 1
  selector:
    matchLabels:
      app: uptime-kuma
  template:
    metadata:
      labels:
        app: uptime-kuma
    spec:
      containers:
      - name: uptime-kuma
        image: louislam/uptime-kuma:1
        volumeMounts:
          - name: local-storage
            mountPath: /app/data
        ports:
        - containerPort: 3001
        readinessProbe:
          httpGet:
            path: /
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
        - name: local-storage
          persistentVolumeClaim:
            claimName: uptime-kuma-pvc

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/name: uptime-kuma
    app.kubernetes.io/part-of: uptime-kuma
  name: uptime-kuma
spec:
  selector:
    app: uptime-kuma
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 3001


---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: uptime-kuma
  namespace: uptime-kuma
  annotations:
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/use-port-in-redirects: "true"
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: uptime-kuma
            port:
              name: http
    host: uptime.lab
  tls:
  - hosts:
    - uptime.lab
    secretName: uptime-kuma-ingress-http
